

hyper params

# node embedding mlp
node_emb_hidden_layers = []				None, 4, 16			3
node_embedding_size = 8					4, 8, 16, 32			4

# message weights mlp
msg_weights_hidden_layers = [16]			None,8,16,32			4
msg_weights_act = torch.relu				relu,sigmoid,hardtanh		3

# message tp spherical harmonics edge
pattern_spherical_harmonics_l = 2			1,2				2

# message format
irreps_message = o3.Irreps("8x0e + 1x1o + 1x2e")	[8,16,32][0,1,3,6][0,1,2]	24

# message batch normalization
batch_normalize_msg=True				True,False			2

# node update weights mlp
node_update_hidden_layers = [24]			None,8,16,32			4
node_update_act = torch.relu				relu,sigmoid,hardtanh		3

# geometric node format
irreps_node = o3.Irreps("8x0e + 1x1o + 1x2e")		[8,16,32][0,1,3,6][0,1,2]	24

# node update batch normalization
batch_normalize_update=False				True,False			2

# interaction tp weights mlp
basis_density_per_A = 5					1,5,10,20			4
inter_tp_weights_hidden_layers = [24]			None,8,16,32			4
inter_tp_weights_act = torch.relu			relu,sigmoid,hardtanh		3

# interaction tp spherical harmonics
inter_spherical_harmonics_l = 2				1,2				2

# general
n_pattern_layers = 2					1,2,3,4				4
radius = 7.5						7.5				1
irreps_out = o3.Irreps("1x0e")				1				1

batch_size						16,32,64,128,256		5
learning_rate						1e-2,1e-3,1e-4			3
epoches							1000				1
